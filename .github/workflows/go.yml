# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.4'

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

    - name: Configure Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    - name: Get the latest tag
      id: get_tag
      run: |
        if tag=$(git describe --tags --abbrev=0 2>/dev/null); then
          echo "LATEST_TAG=$tag" >> $GITHUB_ENV
        else
          echo "LATEST_TAG=v1.0.0" >> $GITHUB_ENV
        fi

    - name: Bump tag
      id: bump_tag
      run: |
        # Strip the 'v'
        base=${LATEST_TAG#v}

        # Split into major, minor, patch
        IFS='.' read -r major minor patch <<< "$base"

        # Increment patch
        patch=$((patch + 1))

        NEW_TAG="v${major}.${minor}.${patch}"

        echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

    - name: Create new tag
      run: |
        git tag $NEW_TAG
        git push origin $NEW_TAG
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}

    - name: Confirm new tag
      run: echo "Created and pushed new tag $NEW_TAG"
